-- public.features definition

-- Drop table

-- DROP TABLE public.features;

CREATE TABLE public.features (
	id uuid DEFAULT gen_random_uuid() NOT NULL,
	created_at timestamptz DEFAULT now() NOT NULL,
	"name" text NULL,
	description text NULL,
	"key" text NOT NULL,
	CONSTRAINT features_key_key UNIQUE (key),
	CONSTRAINT features_pkey PRIMARY KEY (id)
);


-- public.llm_usage definition

-- Drop table

-- DROP TABLE public.llm_usage;

CREATE TABLE public.llm_usage (
	id uuid DEFAULT gen_random_uuid() NOT NULL,
	created_at timestamptz DEFAULT now() NOT NULL,
	run_id text NULL,
	llm_name text NULL,
	completion_tokens int2 NULL,
	prompt_tokens int4 NULL,
	total_tokens int4 NULL,
	"cost" text NULL,
	"name" text NULL,
	CONSTRAINT llm_usage_pkey PRIMARY KEY (id)
);


-- public."plans" definition

-- Drop table

-- DROP TABLE public."plans";

CREATE TABLE public."plans" (
	id uuid DEFAULT gen_random_uuid() NOT NULL,
	created_at timestamptz DEFAULT now() NOT NULL,
	"name" text NULL,
	description text NULL,
	active bool DEFAULT true NULL,
	"key" text NOT NULL,
	CONSTRAINT plans_key_key UNIQUE (key),
	CONSTRAINT plans_pkey PRIMARY KEY (id)
);


-- public.plans_features_map definition

-- Drop table

-- DROP TABLE public.plans_features_map;

CREATE TABLE public.plans_features_map (
	id uuid DEFAULT gen_random_uuid() NOT NULL,
	created_at timestamptz DEFAULT now() NOT NULL,
	plan_id uuid NULL,
	feature_id uuid NULL,
	CONSTRAINT plans_features_map_pkey PRIMARY KEY (id),
	CONSTRAINT plans_features_map_feature_id_fkey FOREIGN KEY (feature_id) REFERENCES public.features(id),
	CONSTRAINT plans_features_map_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES public."plans"(id)
);


-- public.listing_feedback_usage definition

-- Drop table

-- DROP TABLE public.listing_feedback_usage;

CREATE TABLE public.listing_feedback_usage (
	id uuid DEFAULT gen_random_uuid() NOT NULL,
	created_at timestamptz DEFAULT now() NOT NULL,
	profile_id uuid NOT NULL,
	property_id uuid NOT NULL,
	CONSTRAINT listing_feedback_usage_pkey PRIMARY KEY (id)
);


-- public.listings definition

-- Drop table

-- DROP TABLE public.listings;

CREATE TABLE public.listings (
	id uuid DEFAULT gen_random_uuid() NOT NULL,
	created_at timestamptz DEFAULT now() NOT NULL,
	profile_id uuid NULL,
	listed_on text NULL,
	external_listing_id text NULL,
	property_id uuid NULL,
	CONSTRAINT listings_pkey PRIMARY KEY (id)
);


-- public.profiles definition

-- Drop table

-- DROP TABLE public.profiles;

CREATE TABLE public.profiles (
	id uuid NOT NULL,
	updated_at timestamptz NULL,
	username text NULL,
	full_name text NULL,
	avatar_url text NULL,
	website text NULL,
	CONSTRAINT profiles_pkey PRIMARY KEY (id),
	CONSTRAINT profiles_username_key UNIQUE (username),
	CONSTRAINT username_length CHECK ((char_length(username) >= 3))
);


-- public.properties definition

-- Drop table

-- DROP TABLE public.properties;

CREATE TABLE public.properties (
	id uuid DEFAULT gen_random_uuid() NOT NULL,
	created_at timestamptz DEFAULT now() NOT NULL,
	"name" text NULL,
	description text NULL,
	profile_id uuid NULL,
	primary_email text NULL,
	secondary_email text NULL,
	primary_phone text NULL,
	secondary_phone text NULL,
	primary_contact text NULL,
	secondary_contact text NULL,
	notification_preference text DEFAULT 'email'::text NULL,
	CONSTRAINT properties_pkey PRIMARY KEY (id)
);


-- public.property_ratings definition

-- Drop table

-- DROP TABLE public.property_ratings;

CREATE TABLE public.property_ratings (
	id uuid DEFAULT gen_random_uuid() NOT NULL,
	created_at timestamptz DEFAULT now() NOT NULL,
	property_id uuid NOT NULL,
	ratings jsonb NOT NULL,
	modified_at timestamp DEFAULT now() NULL,
	CONSTRAINT property_ratings_property_id_key UNIQUE (property_id)
);


-- public.scan_mismatches definition

-- Drop table

-- DROP TABLE public.scan_mismatches;

CREATE TABLE public.scan_mismatches (
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	created_at timestamptz DEFAULT now() NOT NULL,
	profile_id uuid NULL,
	property_id uuid NULL,
	mismatch_date timestamptz DEFAULT now() NULL,
	message text NULL,
	scan_id int8 NULL,
	CONSTRAINT scan_mismatches_pkey PRIMARY KEY (id)
);


-- public.scans definition

-- Drop table

-- DROP TABLE public.scans;

CREATE TABLE public.scans (
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	created_at timestamptz DEFAULT now() NOT NULL,
	profile_id uuid NULL,
	property_id uuid NULL,
	has_mismatch bool DEFAULT false NULL,
	CONSTRAINT scans_pkey PRIMARY KEY (id)
);


-- public.str_properties definition

-- Drop table

-- DROP TABLE public.str_properties;

CREATE TABLE public.str_properties (
	id uuid DEFAULT gen_random_uuid() NOT NULL,
	created_at timestamptz DEFAULT now() NOT NULL,
	address text NULL,
	title text NOT NULL,
	city text NULL,
	state text NULL,
	zip text NULL,
	url text NULL,
	external_id text NOT NULL,
	description text NULL,
	user_id uuid NULL,
	parent_id uuid NULL,
	is_parent bool NULL,
	amenities json NULL,
	hero_image_link text NULL,
	other_image_links jsonb NULL,
	CONSTRAINT str_properties_external_id_key UNIQUE (external_id),
	CONSTRAINT str_properties_pkey PRIMARY KEY (id)
);


-- public.str_property_ratings definition

-- Drop table

-- DROP TABLE public.str_property_ratings;

CREATE TABLE public.str_property_ratings (
	id uuid DEFAULT gen_random_uuid() NOT NULL,
	created_at timestamptz DEFAULT now() NOT NULL,
	property_id uuid NOT NULL,
	description_rating_number text NULL,
	hero_image_rating_number text NULL,
	overall_photo_rating text NULL,
	interior_rating_category text NULL,
	"30_day_occupancy" text NULL,
	"60_day_occupancy" text NULL,
	"90_day_occupancy" text NULL,
	feedback text NULL,
	suggestions text NULL,
	description_rating_category text NULL,
	amenities_rating_category text NULL,
	amenities_rating_number text NULL,
	hero_image_rating_category text NULL,
	title_rating_number text NULL,
	title_rating_category text NULL,
	interior_rating_number text NULL,
	other_images_rating_category text NULL,
	other_images_rating_number text NULL,
	CONSTRAINT str_property_ratings_pkey PRIMARY KEY (id),
	CONSTRAINT str_property_ratings_property_id_key UNIQUE (property_id)
);


-- public.listing_feedback_usage foreign keys

ALTER TABLE public.listing_feedback_usage ADD CONSTRAINT listing_feedback_usage_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id);
ALTER TABLE public.listing_feedback_usage ADD CONSTRAINT listing_feedback_usage_property_id_fkey FOREIGN KEY (property_id) REFERENCES public.str_properties(id);


-- public.listings foreign keys

ALTER TABLE public.listings ADD CONSTRAINT listings_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id);
ALTER TABLE public.listings ADD CONSTRAINT listings_property_id_fkey FOREIGN KEY (property_id) REFERENCES public.properties(id);


-- public.profiles foreign keys

ALTER TABLE public.profiles ADD CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id);


-- public.properties foreign keys

ALTER TABLE public.properties ADD CONSTRAINT properties_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id);


-- public.property_ratings foreign keys

ALTER TABLE public.property_ratings ADD CONSTRAINT property_ratings_property_id_fkey FOREIGN KEY (property_id) REFERENCES public.str_properties(id);


-- public.scan_mismatches foreign keys

ALTER TABLE public.scan_mismatches ADD CONSTRAINT scan_mismatches_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id);
ALTER TABLE public.scan_mismatches ADD CONSTRAINT scan_mismatches_property_id_fkey FOREIGN KEY (property_id) REFERENCES public.properties(id);
ALTER TABLE public.scan_mismatches ADD CONSTRAINT scan_mismatches_scan_id_fkey FOREIGN KEY (scan_id) REFERENCES public.scans(id);


-- public.scans foreign keys

ALTER TABLE public.scans ADD CONSTRAINT scans_profile_id_fkey FOREIGN KEY (profile_id) REFERENCES public.profiles(id);
ALTER TABLE public.scans ADD CONSTRAINT scans_property_id_fkey FOREIGN KEY (property_id) REFERENCES public.properties(id);


-- public.str_properties foreign keys

ALTER TABLE public.str_properties ADD CONSTRAINT str_properties_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id);


-- public.str_property_ratings foreign keys

ALTER TABLE public.str_property_ratings ADD CONSTRAINT str_property_ratings_property_id_fkey FOREIGN KEY (property_id) REFERENCES public.str_properties(id);