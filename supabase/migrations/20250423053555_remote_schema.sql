create extension if not exists "pg_net" with schema "public" version '0.8.0';

drop policy "Public profiles are viewable by everyone." on "public"."profiles";

drop policy "Users can insert their own profile." on "public"."profiles";

drop policy "Users can update own profile." on "public"."profiles";

create table "public"."features" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "name" text,
    "description" text,
    "key" text not null
);


create table "public"."listing_feedback_usage" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "profile_id" uuid not null,
    "property_id" uuid not null
);


alter table "public"."listing_feedback_usage" enable row level security;

create table "public"."listings" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "profile_id" uuid,
    "listed_on" text,
    "external_listing_id" text,
    "property_id" uuid
);


create table "public"."llm_usage" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "run_id" text,
    "llm_name" text,
    "completion_tokens" smallint,
    "prompt_tokens" integer,
    "total_tokens" integer,
    "cost" text,
    "name" text
);


alter table "public"."llm_usage" enable row level security;

create table "public"."plans" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "name" text,
    "description" text,
    "active" boolean default true,
    "key" text not null
);


create table "public"."plans_features_map" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "plan_id" uuid,
    "feature_id" uuid
);


create table "public"."properties" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "name" text,
    "description" text,
    "profile_id" uuid,
    "primary_email" text,
    "secondary_email" text,
    "primary_phone" text,
    "secondary_phone" text,
    "primary_contact" text,
    "secondary_contact" text,
    "notification_preference" text default 'email'::text
);


create table "public"."property_ratings" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "property_id" uuid not null,
    "ratings" jsonb not null,
    "modified_at" timestamp without time zone default now()
);


create table "public"."scan_mismatches" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "profile_id" uuid,
    "property_id" uuid,
    "mismatch_date" timestamp with time zone default now(),
    "message" text,
    "scan_id" bigint
);


create table "public"."scans" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "profile_id" uuid,
    "property_id" uuid,
    "has_mismatch" boolean default false
);


create table "public"."str_properties" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "address" text,
    "title" text not null,
    "city" text,
    "state" text,
    "zip" text,
    "url" text,
    "external_id" text not null,
    "description" text,
    "user_id" uuid,
    "parent_id" uuid,
    "is_parent" boolean,
    "amenities" json,
    "hero_image_link" text,
    "other_image_links" jsonb
);


create table "public"."str_property_ratings" (
    "id" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "property_id" uuid not null,
    "description_rating_number" text,
    "hero_image_rating_number" text,
    "overall_photo_rating" text,
    "interior_rating_category" text,
    "30_day_occupancy" text,
    "60_day_occupancy" text,
    "90_day_occupancy" text,
    "feedback" text,
    "suggestions" text,
    "description_rating_category" text,
    "amenities_rating_category" text,
    "amenities_rating_number" text,
    "hero_image_rating_category" text,
    "title_rating_number" text,
    "title_rating_category" text,
    "interior_rating_number" text,
    "other_images_rating_category" text,
    "other_images_rating_number" text
);


alter table "public"."profiles" add column "notification_preference" text;

alter table "public"."profiles" add column "plan_id" uuid;

alter table "public"."profiles" add column "primary_email" text;

alter table "public"."profiles" add column "primary_phone" text;

alter table "public"."profiles" add column "secondary_email" text;

alter table "public"."profiles" add column "secondary_phone" text;

alter table "public"."profiles" disable row level security;

CREATE UNIQUE INDEX features_key_key ON public.features USING btree (key);

CREATE UNIQUE INDEX features_pkey ON public.features USING btree (id);

CREATE UNIQUE INDEX listing_feedback_usage_pkey ON public.listing_feedback_usage USING btree (id);

CREATE UNIQUE INDEX listings_pkey ON public.listings USING btree (id);

CREATE UNIQUE INDEX llm_usage_pkey ON public.llm_usage USING btree (id);

CREATE UNIQUE INDEX plans_features_map_pkey ON public.plans_features_map USING btree (id);

CREATE UNIQUE INDEX plans_key_key ON public.plans USING btree (key);

CREATE UNIQUE INDEX plans_pkey ON public.plans USING btree (id);

CREATE UNIQUE INDEX properties_pkey ON public.properties USING btree (id);

CREATE UNIQUE INDEX property_ratings_property_id_key ON public.property_ratings USING btree (property_id);

CREATE UNIQUE INDEX scan_mismatches_pkey ON public.scan_mismatches USING btree (id);

CREATE UNIQUE INDEX scans_pkey ON public.scans USING btree (id);

CREATE UNIQUE INDEX str_properties_external_id_key ON public.str_properties USING btree (external_id);

CREATE UNIQUE INDEX str_properties_pkey ON public.str_properties USING btree (id);

CREATE UNIQUE INDEX str_property_ratings_pkey ON public.str_property_ratings USING btree (id);

CREATE UNIQUE INDEX str_property_ratings_property_id_key ON public.str_property_ratings USING btree (property_id);

alter table "public"."features" add constraint "features_pkey" PRIMARY KEY using index "features_pkey";

alter table "public"."listing_feedback_usage" add constraint "listing_feedback_usage_pkey" PRIMARY KEY using index "listing_feedback_usage_pkey";

alter table "public"."listings" add constraint "listings_pkey" PRIMARY KEY using index "listings_pkey";

alter table "public"."llm_usage" add constraint "llm_usage_pkey" PRIMARY KEY using index "llm_usage_pkey";

alter table "public"."plans" add constraint "plans_pkey" PRIMARY KEY using index "plans_pkey";

alter table "public"."plans_features_map" add constraint "plans_features_map_pkey" PRIMARY KEY using index "plans_features_map_pkey";

alter table "public"."properties" add constraint "properties_pkey" PRIMARY KEY using index "properties_pkey";

alter table "public"."scan_mismatches" add constraint "scan_mismatches_pkey" PRIMARY KEY using index "scan_mismatches_pkey";

alter table "public"."scans" add constraint "scans_pkey" PRIMARY KEY using index "scans_pkey";

alter table "public"."str_properties" add constraint "str_properties_pkey" PRIMARY KEY using index "str_properties_pkey";

alter table "public"."str_property_ratings" add constraint "str_property_ratings_pkey" PRIMARY KEY using index "str_property_ratings_pkey";

alter table "public"."features" add constraint "features_key_key" UNIQUE using index "features_key_key";

alter table "public"."listing_feedback_usage" add constraint "listing_feedback_usage_profile_id_fkey" FOREIGN KEY (profile_id) REFERENCES profiles(id) not valid;

alter table "public"."listing_feedback_usage" validate constraint "listing_feedback_usage_profile_id_fkey";

alter table "public"."listing_feedback_usage" add constraint "listing_feedback_usage_property_id_fkey" FOREIGN KEY (property_id) REFERENCES str_properties(id) not valid;

alter table "public"."listing_feedback_usage" validate constraint "listing_feedback_usage_property_id_fkey";

alter table "public"."listings" add constraint "listings_profile_id_fkey" FOREIGN KEY (profile_id) REFERENCES profiles(id) not valid;

alter table "public"."listings" validate constraint "listings_profile_id_fkey";

alter table "public"."listings" add constraint "listings_property_id_fkey" FOREIGN KEY (property_id) REFERENCES properties(id) not valid;

alter table "public"."listings" validate constraint "listings_property_id_fkey";

alter table "public"."plans" add constraint "plans_key_key" UNIQUE using index "plans_key_key";

alter table "public"."plans_features_map" add constraint "plans_features_map_feature_id_fkey" FOREIGN KEY (feature_id) REFERENCES features(id) not valid;

alter table "public"."plans_features_map" validate constraint "plans_features_map_feature_id_fkey";

alter table "public"."plans_features_map" add constraint "plans_features_map_plan_id_fkey" FOREIGN KEY (plan_id) REFERENCES plans(id) not valid;

alter table "public"."plans_features_map" validate constraint "plans_features_map_plan_id_fkey";

alter table "public"."profiles" add constraint "profiles_plan_id_fkey" FOREIGN KEY (plan_id) REFERENCES plans(id) not valid;

alter table "public"."profiles" validate constraint "profiles_plan_id_fkey";

alter table "public"."properties" add constraint "properties_profile_id_fkey" FOREIGN KEY (profile_id) REFERENCES profiles(id) not valid;

alter table "public"."properties" validate constraint "properties_profile_id_fkey";

alter table "public"."property_ratings" add constraint "property_ratings_property_id_fkey" FOREIGN KEY (property_id) REFERENCES str_properties(id) not valid;

alter table "public"."property_ratings" validate constraint "property_ratings_property_id_fkey";

alter table "public"."property_ratings" add constraint "property_ratings_property_id_key" UNIQUE using index "property_ratings_property_id_key";

alter table "public"."scan_mismatches" add constraint "scan_mismatches_profile_id_fkey" FOREIGN KEY (profile_id) REFERENCES profiles(id) not valid;

alter table "public"."scan_mismatches" validate constraint "scan_mismatches_profile_id_fkey";

alter table "public"."scan_mismatches" add constraint "scan_mismatches_property_id_fkey" FOREIGN KEY (property_id) REFERENCES properties(id) not valid;

alter table "public"."scan_mismatches" validate constraint "scan_mismatches_property_id_fkey";

alter table "public"."scan_mismatches" add constraint "scan_mismatches_scan_id_fkey" FOREIGN KEY (scan_id) REFERENCES scans(id) not valid;

alter table "public"."scan_mismatches" validate constraint "scan_mismatches_scan_id_fkey";

alter table "public"."scans" add constraint "scans_profile_id_fkey" FOREIGN KEY (profile_id) REFERENCES profiles(id) not valid;

alter table "public"."scans" validate constraint "scans_profile_id_fkey";

alter table "public"."scans" add constraint "scans_property_id_fkey" FOREIGN KEY (property_id) REFERENCES properties(id) not valid;

alter table "public"."scans" validate constraint "scans_property_id_fkey";

alter table "public"."str_properties" add constraint "str_properties_external_id_key" UNIQUE using index "str_properties_external_id_key";

alter table "public"."str_properties" add constraint "str_properties_user_id_fkey" FOREIGN KEY (user_id) REFERENCES profiles(id) not valid;

alter table "public"."str_properties" validate constraint "str_properties_user_id_fkey";

alter table "public"."str_property_ratings" add constraint "str_property_ratings_property_id_fkey" FOREIGN KEY (property_id) REFERENCES str_properties(id) not valid;

alter table "public"."str_property_ratings" validate constraint "str_property_ratings_property_id_fkey";

alter table "public"."str_property_ratings" add constraint "str_property_ratings_property_id_key" UNIQUE using index "str_property_ratings_property_id_key";

grant delete on table "public"."features" to "anon";

grant insert on table "public"."features" to "anon";

grant references on table "public"."features" to "anon";

grant select on table "public"."features" to "anon";

grant trigger on table "public"."features" to "anon";

grant truncate on table "public"."features" to "anon";

grant update on table "public"."features" to "anon";

grant delete on table "public"."features" to "authenticated";

grant insert on table "public"."features" to "authenticated";

grant references on table "public"."features" to "authenticated";

grant select on table "public"."features" to "authenticated";

grant trigger on table "public"."features" to "authenticated";

grant truncate on table "public"."features" to "authenticated";

grant update on table "public"."features" to "authenticated";

grant delete on table "public"."features" to "service_role";

grant insert on table "public"."features" to "service_role";

grant references on table "public"."features" to "service_role";

grant select on table "public"."features" to "service_role";

grant trigger on table "public"."features" to "service_role";

grant truncate on table "public"."features" to "service_role";

grant update on table "public"."features" to "service_role";

grant delete on table "public"."listing_feedback_usage" to "anon";

grant insert on table "public"."listing_feedback_usage" to "anon";

grant references on table "public"."listing_feedback_usage" to "anon";

grant select on table "public"."listing_feedback_usage" to "anon";

grant trigger on table "public"."listing_feedback_usage" to "anon";

grant truncate on table "public"."listing_feedback_usage" to "anon";

grant update on table "public"."listing_feedback_usage" to "anon";

grant delete on table "public"."listing_feedback_usage" to "authenticated";

grant insert on table "public"."listing_feedback_usage" to "authenticated";

grant references on table "public"."listing_feedback_usage" to "authenticated";

grant select on table "public"."listing_feedback_usage" to "authenticated";

grant trigger on table "public"."listing_feedback_usage" to "authenticated";

grant truncate on table "public"."listing_feedback_usage" to "authenticated";

grant update on table "public"."listing_feedback_usage" to "authenticated";

grant delete on table "public"."listing_feedback_usage" to "service_role";

grant insert on table "public"."listing_feedback_usage" to "service_role";

grant references on table "public"."listing_feedback_usage" to "service_role";

grant select on table "public"."listing_feedback_usage" to "service_role";

grant trigger on table "public"."listing_feedback_usage" to "service_role";

grant truncate on table "public"."listing_feedback_usage" to "service_role";

grant update on table "public"."listing_feedback_usage" to "service_role";

grant delete on table "public"."listings" to "anon";

grant insert on table "public"."listings" to "anon";

grant references on table "public"."listings" to "anon";

grant select on table "public"."listings" to "anon";

grant trigger on table "public"."listings" to "anon";

grant truncate on table "public"."listings" to "anon";

grant update on table "public"."listings" to "anon";

grant delete on table "public"."listings" to "authenticated";

grant insert on table "public"."listings" to "authenticated";

grant references on table "public"."listings" to "authenticated";

grant select on table "public"."listings" to "authenticated";

grant trigger on table "public"."listings" to "authenticated";

grant truncate on table "public"."listings" to "authenticated";

grant update on table "public"."listings" to "authenticated";

grant delete on table "public"."listings" to "service_role";

grant insert on table "public"."listings" to "service_role";

grant references on table "public"."listings" to "service_role";

grant select on table "public"."listings" to "service_role";

grant trigger on table "public"."listings" to "service_role";

grant truncate on table "public"."listings" to "service_role";

grant update on table "public"."listings" to "service_role";

grant delete on table "public"."llm_usage" to "anon";

grant insert on table "public"."llm_usage" to "anon";

grant references on table "public"."llm_usage" to "anon";

grant select on table "public"."llm_usage" to "anon";

grant trigger on table "public"."llm_usage" to "anon";

grant truncate on table "public"."llm_usage" to "anon";

grant update on table "public"."llm_usage" to "anon";

grant delete on table "public"."llm_usage" to "authenticated";

grant insert on table "public"."llm_usage" to "authenticated";

grant references on table "public"."llm_usage" to "authenticated";

grant select on table "public"."llm_usage" to "authenticated";

grant trigger on table "public"."llm_usage" to "authenticated";

grant truncate on table "public"."llm_usage" to "authenticated";

grant update on table "public"."llm_usage" to "authenticated";

grant delete on table "public"."llm_usage" to "service_role";

grant insert on table "public"."llm_usage" to "service_role";

grant references on table "public"."llm_usage" to "service_role";

grant select on table "public"."llm_usage" to "service_role";

grant trigger on table "public"."llm_usage" to "service_role";

grant truncate on table "public"."llm_usage" to "service_role";

grant update on table "public"."llm_usage" to "service_role";

grant delete on table "public"."plans" to "anon";

grant insert on table "public"."plans" to "anon";

grant references on table "public"."plans" to "anon";

grant select on table "public"."plans" to "anon";

grant trigger on table "public"."plans" to "anon";

grant truncate on table "public"."plans" to "anon";

grant update on table "public"."plans" to "anon";

grant delete on table "public"."plans" to "authenticated";

grant insert on table "public"."plans" to "authenticated";

grant references on table "public"."plans" to "authenticated";

grant select on table "public"."plans" to "authenticated";

grant trigger on table "public"."plans" to "authenticated";

grant truncate on table "public"."plans" to "authenticated";

grant update on table "public"."plans" to "authenticated";

grant delete on table "public"."plans" to "service_role";

grant insert on table "public"."plans" to "service_role";

grant references on table "public"."plans" to "service_role";

grant select on table "public"."plans" to "service_role";

grant trigger on table "public"."plans" to "service_role";

grant truncate on table "public"."plans" to "service_role";

grant update on table "public"."plans" to "service_role";

grant delete on table "public"."plans_features_map" to "anon";

grant insert on table "public"."plans_features_map" to "anon";

grant references on table "public"."plans_features_map" to "anon";

grant select on table "public"."plans_features_map" to "anon";

grant trigger on table "public"."plans_features_map" to "anon";

grant truncate on table "public"."plans_features_map" to "anon";

grant update on table "public"."plans_features_map" to "anon";

grant delete on table "public"."plans_features_map" to "authenticated";

grant insert on table "public"."plans_features_map" to "authenticated";

grant references on table "public"."plans_features_map" to "authenticated";

grant select on table "public"."plans_features_map" to "authenticated";

grant trigger on table "public"."plans_features_map" to "authenticated";

grant truncate on table "public"."plans_features_map" to "authenticated";

grant update on table "public"."plans_features_map" to "authenticated";

grant delete on table "public"."plans_features_map" to "service_role";

grant insert on table "public"."plans_features_map" to "service_role";

grant references on table "public"."plans_features_map" to "service_role";

grant select on table "public"."plans_features_map" to "service_role";

grant trigger on table "public"."plans_features_map" to "service_role";

grant truncate on table "public"."plans_features_map" to "service_role";

grant update on table "public"."plans_features_map" to "service_role";

grant delete on table "public"."properties" to "anon";

grant insert on table "public"."properties" to "anon";

grant references on table "public"."properties" to "anon";

grant select on table "public"."properties" to "anon";

grant trigger on table "public"."properties" to "anon";

grant truncate on table "public"."properties" to "anon";

grant update on table "public"."properties" to "anon";

grant delete on table "public"."properties" to "authenticated";

grant insert on table "public"."properties" to "authenticated";

grant references on table "public"."properties" to "authenticated";

grant select on table "public"."properties" to "authenticated";

grant trigger on table "public"."properties" to "authenticated";

grant truncate on table "public"."properties" to "authenticated";

grant update on table "public"."properties" to "authenticated";

grant delete on table "public"."properties" to "service_role";

grant insert on table "public"."properties" to "service_role";

grant references on table "public"."properties" to "service_role";

grant select on table "public"."properties" to "service_role";

grant trigger on table "public"."properties" to "service_role";

grant truncate on table "public"."properties" to "service_role";

grant update on table "public"."properties" to "service_role";

grant delete on table "public"."property_ratings" to "anon";

grant insert on table "public"."property_ratings" to "anon";

grant references on table "public"."property_ratings" to "anon";

grant select on table "public"."property_ratings" to "anon";

grant trigger on table "public"."property_ratings" to "anon";

grant truncate on table "public"."property_ratings" to "anon";

grant update on table "public"."property_ratings" to "anon";

grant delete on table "public"."property_ratings" to "authenticated";

grant insert on table "public"."property_ratings" to "authenticated";

grant references on table "public"."property_ratings" to "authenticated";

grant select on table "public"."property_ratings" to "authenticated";

grant trigger on table "public"."property_ratings" to "authenticated";

grant truncate on table "public"."property_ratings" to "authenticated";

grant update on table "public"."property_ratings" to "authenticated";

grant delete on table "public"."property_ratings" to "service_role";

grant insert on table "public"."property_ratings" to "service_role";

grant references on table "public"."property_ratings" to "service_role";

grant select on table "public"."property_ratings" to "service_role";

grant trigger on table "public"."property_ratings" to "service_role";

grant truncate on table "public"."property_ratings" to "service_role";

grant update on table "public"."property_ratings" to "service_role";

grant delete on table "public"."scan_mismatches" to "anon";

grant insert on table "public"."scan_mismatches" to "anon";

grant references on table "public"."scan_mismatches" to "anon";

grant select on table "public"."scan_mismatches" to "anon";

grant trigger on table "public"."scan_mismatches" to "anon";

grant truncate on table "public"."scan_mismatches" to "anon";

grant update on table "public"."scan_mismatches" to "anon";

grant delete on table "public"."scan_mismatches" to "authenticated";

grant insert on table "public"."scan_mismatches" to "authenticated";

grant references on table "public"."scan_mismatches" to "authenticated";

grant select on table "public"."scan_mismatches" to "authenticated";

grant trigger on table "public"."scan_mismatches" to "authenticated";

grant truncate on table "public"."scan_mismatches" to "authenticated";

grant update on table "public"."scan_mismatches" to "authenticated";

grant delete on table "public"."scan_mismatches" to "service_role";

grant insert on table "public"."scan_mismatches" to "service_role";

grant references on table "public"."scan_mismatches" to "service_role";

grant select on table "public"."scan_mismatches" to "service_role";

grant trigger on table "public"."scan_mismatches" to "service_role";

grant truncate on table "public"."scan_mismatches" to "service_role";

grant update on table "public"."scan_mismatches" to "service_role";

grant delete on table "public"."scans" to "anon";

grant insert on table "public"."scans" to "anon";

grant references on table "public"."scans" to "anon";

grant select on table "public"."scans" to "anon";

grant trigger on table "public"."scans" to "anon";

grant truncate on table "public"."scans" to "anon";

grant update on table "public"."scans" to "anon";

grant delete on table "public"."scans" to "authenticated";

grant insert on table "public"."scans" to "authenticated";

grant references on table "public"."scans" to "authenticated";

grant select on table "public"."scans" to "authenticated";

grant trigger on table "public"."scans" to "authenticated";

grant truncate on table "public"."scans" to "authenticated";

grant update on table "public"."scans" to "authenticated";

grant delete on table "public"."scans" to "service_role";

grant insert on table "public"."scans" to "service_role";

grant references on table "public"."scans" to "service_role";

grant select on table "public"."scans" to "service_role";

grant trigger on table "public"."scans" to "service_role";

grant truncate on table "public"."scans" to "service_role";

grant update on table "public"."scans" to "service_role";

grant delete on table "public"."str_properties" to "anon";

grant insert on table "public"."str_properties" to "anon";

grant references on table "public"."str_properties" to "anon";

grant select on table "public"."str_properties" to "anon";

grant trigger on table "public"."str_properties" to "anon";

grant truncate on table "public"."str_properties" to "anon";

grant update on table "public"."str_properties" to "anon";

grant delete on table "public"."str_properties" to "authenticated";

grant insert on table "public"."str_properties" to "authenticated";

grant references on table "public"."str_properties" to "authenticated";

grant select on table "public"."str_properties" to "authenticated";

grant trigger on table "public"."str_properties" to "authenticated";

grant truncate on table "public"."str_properties" to "authenticated";

grant update on table "public"."str_properties" to "authenticated";

grant delete on table "public"."str_properties" to "service_role";

grant insert on table "public"."str_properties" to "service_role";

grant references on table "public"."str_properties" to "service_role";

grant select on table "public"."str_properties" to "service_role";

grant trigger on table "public"."str_properties" to "service_role";

grant truncate on table "public"."str_properties" to "service_role";

grant update on table "public"."str_properties" to "service_role";

grant delete on table "public"."str_property_ratings" to "anon";

grant insert on table "public"."str_property_ratings" to "anon";

grant references on table "public"."str_property_ratings" to "anon";

grant select on table "public"."str_property_ratings" to "anon";

grant trigger on table "public"."str_property_ratings" to "anon";

grant truncate on table "public"."str_property_ratings" to "anon";

grant update on table "public"."str_property_ratings" to "anon";

grant delete on table "public"."str_property_ratings" to "authenticated";

grant insert on table "public"."str_property_ratings" to "authenticated";

grant references on table "public"."str_property_ratings" to "authenticated";

grant select on table "public"."str_property_ratings" to "authenticated";

grant trigger on table "public"."str_property_ratings" to "authenticated";

grant truncate on table "public"."str_property_ratings" to "authenticated";

grant update on table "public"."str_property_ratings" to "authenticated";

grant delete on table "public"."str_property_ratings" to "service_role";

grant insert on table "public"."str_property_ratings" to "service_role";

grant references on table "public"."str_property_ratings" to "service_role";

grant select on table "public"."str_property_ratings" to "service_role";

grant trigger on table "public"."str_property_ratings" to "service_role";

grant truncate on table "public"."str_property_ratings" to "service_role";

grant update on table "public"."str_property_ratings" to "service_role";

create policy "Public profiles are viewable only by authenticated users"
on "public"."profiles"
as permissive
for select
to authenticated
using (true);


create policy "Users can create a profile."
on "public"."profiles"
as permissive
for insert
to authenticated
with check ((( SELECT auth.uid() AS uid) = id));


create policy "Users can update their own profile."
on "public"."profiles"
as permissive
for update
to authenticated
using ((( SELECT auth.uid() AS uid) = id))
with check ((( SELECT auth.uid() AS uid) = id));



